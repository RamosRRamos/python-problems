import unittest
from io import StringIO
from unittest.mock import patch

from python_text_alignment.python_text_alignment import TextAlignment


class TestTextAlignment(unittest.TestCase):
    """
        This test creates an instance of the TextAlignment class with a
        thickness of 5 and the character 'H',
        and compares its output to the expected output generated by the
        original code. The unittest.mock
        module is used to redirect the standard output to a StringIO object,
        allowing us to capture
        the output and compare it to the expected output.
        To run this test, save it in a file called test_text_alignment.py
        and run the
        command python -m unittest test_text_alignment.

    """

    def test_create(self):
        expected_output = StringIO()
        thickness = 5
        character = 'H'

        for i in range(thickness):
            expected_output.write(
                (character * i).rjust(thickness - 1) + character + (
                        character * i).ljust(thickness - 1) + '\n')

        for i in range(thickness + 1):
            expected_output.write(
                (character * thickness).center(thickness * 2) + (
                        character * thickness).center(thickness * 6) + '\n')

        for i in range((thickness + 1) // 2):
            expected_output.write(
                (character * thickness * 5).center(thickness * 6) + '\n')

        for i in range(thickness + 1):
            expected_output.write(
                (character * thickness).center(thickness * 2) + (
                        character * thickness).center(thickness * 6) + '\n')

        for i in range(thickness):
            expected_output.write(((character * (thickness - i - 1)).rjust(
                thickness) + character + (character * (
                    thickness - i - 1)).ljust(thickness)).rjust(
                thickness * 6) + '\n')

        text_align = TextAlignment(thickness, character)

        with patch('sys.stdout', new=StringIO()) as fake_output:
            text_align.create()

            self.assertEqual(fake_output.getvalue(), expected_output.getvalue())


if __name__ == '__main__':
    unittest.main()
